@startuml
actor user
participant ":Duke"
box model
participant ":Parser"
participant ":AddFavCommand"
end box
box logic
participant ":Fav"
participant ":FavList"
end box

user ->":Duke"
":Duke" -> ":Parser" : Enter command
activate ":Parser"
create ":AddFavCommand"
":Parser" -> ":AddFavCommand"
activate ":AddFavCommand"
":AddFavCommand" --> ":Parser"
deactivate ":AddFavCommand"
":Parser" -> ":AddFavCommand" : executeCommand()
activate ":AddFavCommand"
opt null command
    ":AddFavCommand" --> ":Parser" : INVALID_COMMAND
    ":Parser" --> ":Duke"
end
":AddFavCommand" -> ":AddFavCommand" : createFav()
activate ":AddFavCommand"
alt description empty
    create ":Fav"
    ":AddFavCommand" -> ":Fav" : new Fav(command, command)
     activate ":Fav" 
    ":Fav" --> ":AddFavCommand"
    deactivate ":Fav" 
else description not empty
    create ":Fav"
    ":AddFavCommand" -> ":Fav" : new Fav(command, desc)
     activate ":Fav" 
    ":Fav" --> ":AddFavCommand"
    deactivate ":Fav" 
end

":AddFavCommand" --> ":AddFavCommand"
deactivate ":AddFavCommand"
":AddFavCommand" -> ":FavList" : contains(Fav)
activate ":FavList"

loop size of FavList times
    ":FavList" -> ":Fav" : equals()
     activate ":Fav" 
    ":Fav" --> ":FavList"
    deactivate ":Fav" 
end

":FavList" --> ":AddFavCommand"
deactivate ":FavList"
opt no duplicate Fav
    ":AddFavCommand" -> ":FavList" : addFav()
    activate ":FavList"
    ":FavList" --> ":AddFavCommand"
    deactivate ":FavList"
    ":AddFavCommand" --> ":Parser"
    deactivate ":AddFavCommand"
    ":Parser" --> ":Duke"
    deactivate ":Parser"


@enduml